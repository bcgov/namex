[tool.poetry]
name = "namex_emailer"
version = "1.0"
description = "This module is the service worker for sending emails about namex related events."
license = "BSD-3-Clause"
authors = ['bolyachevets']
readme = "README.md"
packages = [{include = "namex_emailer", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
flask = "^3.0.2"
gunicorn = "^20.1.0"
python-dotenv = "^0.21.0"
launchdarkly-server-sdk = "^8.1.4"
simple_cloudevent = { git = "https://github.com/daxiom/simple-cloudevent.py" }
gcp_queue = { git = "https://github.com/bcgov/namex.git", subdirectory = "services/pubsub" }
sbc-common-components = { git = "https://github.com/bcgov/sbc-common-components.git", subdirectory = "python" }
namex = { git = "https://github.com/bcgov/namex.git", subdirectory = "api" }
requests = "^2.31.0"
jinja2 = "^3.1.2"
werkzeug = "^3.0.0"
cachetools = "^5.3.3"
google-cloud-tasks = "^2.19.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
requests-mock = "^1.11.0"
ruff = "^0.11.6"

[tool.ruff]
line-length    = 120

[tool.ruff.lint]
extend-select = [
  "B",    # bugbears
  "C",    # comprehensions
  "Q",    # quotes style
  "S",    # security (bandit)
  "I",    # import ordering
  "W"     # whitespace
]

extend-ignore = [
  "S113",  # no timeout
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401", "E402", "I"]  # no import ordering on init files
"tests/**/*.py"    = ["B", "C", "S", "F", "E"]  # no strict linting in test files

[tool.pytest.ini_options]
minversion = "2.0"
testpaths = [
   "tests",
]
addopts = "--verbose --strict -p no:warnings --cov=src --cov-report html:htmlcov --cov-report xml:coverage.xml"
python_files = [
   "test*.py"
]
norecursedirs = [
   ".git", ".tox", "venv*", "requirements*", "build",
]
log_cli = true
log_cli_level = "1"
filterwarnings = [
   "ignore::UserWarning"
]
markers = [
   "slow",
   "serial",
]

[tool.coverage.run]
branch = true
source = [
   "src/namex_emailer",
]
omit = [
    "wsgi.py",
    "gunicorn_config.py"
]

[tool.coverage.report]
exclude_lines = [
   "pragma: no cover",
   "from",
   "import",
   "def __repr__",
   "if self.debug:",
   "if settings.DEBUG",
   "raise AssertionError",
   "raise NotImplementedError",
   "if 0:",
   'if __name__ == "__main__":',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
