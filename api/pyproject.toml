
[tool.poetry]
name = "namex"
version = "1.50.0"
description = ""
authors = ["Thor Wolpert <thor@wolpert.ca>"]
license = "Apache Software License Version 2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
gcp_queue = { git = "https://github.com/bcgov/namex.git", subdirectory = "services/pubsub" }
swagger_client = { git = "https://github.com/bcgov/namex-synonyms-api-py-client.git" }
simple_cloudevent = { git = "https://github.com/daxiom/simple-cloudevent.py" }
flask-jwt-oidc = { git = "https://github.com/seeker25/flask-jwt-oidc.git" }
sbc-common-components = { git = "https://github.com/bcgov/sbc-common-components.git", subdirectory = "python" }
structured_logging = { git = "https://github.com/bcgov/sbc-connect-common.git", rev = "7f1cc0ea4a374310ac558ff435fa6b7ea7bb2f8b", subdirectory = "python/structured-logging" }

gunicorn = "^20.1.0"
flask-cors = "^4.0.0"
flask = "^3.0.2"
flask-restx = "^1.0.3"
flask-sqlalchemy = "^3.0.0"
flask-marshmallow = "^0.14.0"
flask-caching = "^1.10.1"
flask-migrate = "^2.7.0"
flask-moment = "^0.11.0"
jinja2 = "^3.1.2"
markupSafe = "^2.1.1"
itsdangerous = "^2.1.2"
werkzeug = "^3.0.0"
protobuf = "^3.20.1"
SQLAlchemy = "^1.4.18"
marshmallow-sqlalchemy = "^0.28.1"
marshmallow = "^3.18.0"
pandas = "^1.5.0"
inflect = "^6.0.0"
Mako = "^1.1.4"
alembic = "^1.5.8"
aniso8601 = "^9.0.1"
attrs = "^22.2.0"
blinker = "^1.5"
cachelib = "^0.13.0"
certifi = "^2022.9.24"
charset-normalizer = "^2.1.1"
click = "^8.1.3"
cmudict = "^1.0.2"
dataclasses = "^0.6"
ecdsa = "^0.18.0"
greenlet = "^3.0.3"
idna = "^3.4"
importlib-resources = "^5.10.0"
joblib = "^1.2.0"
jsonpickle = "^2.2.0"
jsonschema = "^4.16.0"
launchdarkly-server-sdk = "^8.1.3"
lxml = "^4.9.1"
nltk = "^3.7"
numpy = "^1.26.4"
packaging = "^21.3"
pkgutil_resolve_name = "^1.3.10"
pronouncing = "^0.2.0"
psycopg2-binary = "^2.9.4"
pyasn1 = "^0.4.8"
pycountry = "^22.3.5"
pydantic = "^1.10.2"
pyparsing = "^3.0.9"
pyrsistent = "^0.18.1"
pysolr = "^3.9.0"
python-dateutil = "^2.8.2"
python-dotenv = "^0.21.0"
python-editor = "^1.0.4"
python-jose = "^3.3.0"
pytz = "^2022.4"
regex = "^2022.9.13"
requests = "^2.28.1"
rsa = "^4.9"
sentry-sdk = "^1.20.0"
six = "^1.16.0"
toolz = "^0.12.0"
tqdm = "^4.64.1"
typing_extensions = "^4.4.0"
urllib3 = "^1.26.12"
xmltodict = "^0.13.0"
zipp = "^3.8.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
freezegun = "^1.4.0"
pytest-aiohttp = "^1.0.5"
pytest-mock = "^3.12.0"
pyhamcrest = "^2.1.0"
dpath = "^2.1.6"
pydocstyle = "^6.3.0"
coverage = "^7.4.1"
pytest-cov = "^4.1.0"
ruff = "^0.11.6"

[tool.ruff]
line-length    = 120
extend-exclude = ["migrations", "tests"]

[tool.ruff.lint]
extend-select = [
  "B",    # bugbears
  "C",    # comprehensions
  "Q",    # quotes style
  "S",    # security (bandit)
  "I",    # import ordering
  "W"     # whitespace
]
extend-ignore = [
  "S113",  # no timeout
  "S310",  # unsafe URL open
  "B904",  # missing ‘from err’ in raise
  "C901",  # too complex
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
inline-quotes    = "single"

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401", "E402", "I"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "2.0"
testpaths = [
   "tests",
]
python_files = [
   "test*.py"
]
norecursedirs = [
   ".git", ".tox", "venv*", "requirements*", "build",
]
log_cli = true
log_cli_level = "1"
filterwarnings = [
   "ignore::UserWarning"
]
markers = [
   "slow",
   "serial",
]

[tool.coverage.run]
branch = true
source = [
   "src/entity-pay",
]
omit = [
    "wsgi.py",
    "gunicorn_config.py"
]

[tool.coverage.report]
exclude_lines = [
   "pragma: no cover",
   "from",
   "import",
   "def __repr__",
   "if self.debug:",
   "if settings.DEBUG",
   "raise AssertionError",
   "raise NotImplementedError",
   "if 0:",
   'if __name__ == "__main__":',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"