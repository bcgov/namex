---
kind: "Template"
apiVersion: "v1"
metadata:
  name: "inprogress-update"
  annotations:
    description: "Scheduled Task to update NRs that have been inprogress for more than 30 minutes"
    tags: "cronjob"
objects:
- kind: "CronJob"
  apiVersion: "batch/v1beta1"
  metadata:
    name: "inprogress-update"
  spec:
    schedule: "*/30 * * * *"
    suspend: false
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: "inprogress-update"
              image: "docker-registry.default.svc:5000/servicebc-ne-tools/inprogress-update:${ENV_TAG}"
              imagePullPolicy: Always
              args:
              - /bin/sh
              - -c
              - cd /opt/app-root/src; ./run.sh
              env:
                  - name: DATABASE_USERNAME
                    valueFrom:
                      secretKeyRef:
                        key: database-user
                        name: postgresql
                  - name: DATABASE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        key: database-password
                        name: postgresql
                  - name: DATABASE_NAME
                    valueFrom:
                      secretKeyRef:
                        key: database-name
                        name: postgresql
                  - name: DATABASE_HOST
                    value: 'postgresql'
                  - name: DATABASE_PORT
                    value: '5432'
                  - name: MAX_ROWS
                    value: "${MAX_ROWS}"
                  - name: MIN_DELAY_SECONDS
                    value: "${MIN_DELAY_SECONDS}"
            restartPolicy: "Never"
            concurrencyPolicy: "Forbid"
parameters: [
        {
          "name": "ENV_TAG",
          "displayName": "ENV_TAG",
          "description": "the tag for the environment that the job image runs from.",
          "required": true,
          "value": "dev"
        },
        {
          "name": "MAX_ROWS",
          "displayName": "MAX_ROWS",
          "description": "The maximum number of Name Requests to process per job run",
          "required": true,
          "value": "100"
        },
        {
          "name": "MIN_DELAY_SECONDS",
          "displayName": "MIN_DELAY_SECONDS",
          "description": "The minimum amount of time between when the job started and the approve/rejected timestamp of the Name Request",
          "required": true,
          "value": "1800"
        },
]